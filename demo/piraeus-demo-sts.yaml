kind: Namespace
apiVersion: v1
metadata:
  name: piraeus-demo
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: piraeus-demo-sts
  namespace: piraeus-demo
  labels:
    dce.daocloud.io/component: piraeus-demo-sts
    dce.daocloud.io/app: piraeus-demo
spec:
  serviceName: piraeus-demo-sts
  replicas: 3
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      dce.daocloud.io/component: piraeus-demo-sts
  template:
    metadata:
      labels:
        dce.daocloud.io/component: piraeus-demo-sts
        dce.daocloud.io/app: piraeus-demo
      name: piraeus-demo-sts
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      initContainers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: init
        command: 
        - sh
        - -xc
        - | 
          echo "<center><h1>Demo volume $( df | grep -E drbd )</h1></center>" \
          > /usr/share/nginx/html/index.html
        volumeMounts:
        - name: html-root
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: '100m'
            memory: '100Mi'
          limits:
            cpu: '500m'
            memory: '500Mi'
      containers:
      - image: nginx:alpine
        imagePullPolicy: IfNotPresent
        name: piraeus-demo-sts
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html-root
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: '100m'
            memory: '100Mi'
          limits:
            cpu: '500m'
            memory: '500Mi'
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: piraeus/node
                operator: In
                values:
                - "true"
      tolerations:
      - operator: "Exists"
        effect: "NoSchedule"
  volumeClaimTemplates:
  - metadata:
      name: html-root
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: piraeus-demo-r2
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: piraeus-demo-sts
  namespace: piraeus-demo
  labels:
    dce.daocloud.io/app: piraeus-demo
spec:
  type: NodePort
  ports:
    - name: piraeus-demo-sts-80
      protocol: TCP
      targetPort: 80
      port: 80
      nodePort: 31280
  selector:
    dce.daocloud.io/component: piraeus-demo-sts

#@ load("funcs.lib.yml", "name", "node", "initimage")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: #@ name() + "-api"
  namespace: kube-system
data:
  #! Must be an FQDN here, otherwise haproxy cannot resolve it!
  LS_CONTROLLERS: #@ name() + "-controller.kube-system.svc.cluster.local:3370"
  FRONTEND_PORT: '3370'
  HAPROXY_CFG: |
    defaults
        timeout connect 10s
        timeout client 30s
        timeout server 30s
        log stderr format raw daemon notice
        mode tcp
        option tcplog
        maxconn 3000
    frontend node
        bind "${FRONTEND_IP}":"${FRONTEND_PORT}"
        default_backend controllers
    resolvers hostdns
        parse-resolv-conf
        accepted_payload_size 1024
        hold valid 10s
    backend controllers
        balance roundrobin
        server-template controller 1 "${LS_CONTROLLERS}" check resolvers hostdns init-addr none
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ name() + "-api"
  namespace: kube-system
spec:
  replicas: 1
  strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: #@ name()
      app.kubernetes.io/component: #@ name() + "-api"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: #@ name()
        app.kubernetes.io/component: #@ name() + "-api"
    spec:
      priorityClassName: system-node-critical
      restartPolicy: Always
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: proxy
        image: docker.io/library/haproxy:2.1.3-alpine
        imagePullPolicy: Always
        resources:
          #! requests:
          #!   cpu: '100m'
          #!   memory: '100Mi'
          limits:
            cpu: 200m
            memory: 200Mi
        envFrom:
        - configMapRef:
            name:  #@ name() + "-api"
        env:
        - name: FRONTEND_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          httpGet:
            port: 3370
          initialDelaySeconds: 1
          periodSeconds: 1
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
        - name: etc-haproxy
          mountPath: /usr/local/etc/haproxy
      volumes:
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: etc-haproxy
        configMap:
          name: #@ name() + "-api"
          items:
          - key: HAPROXY_CFG
            path: haproxy.cfg
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - #@ name() + "-api"
            topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: #@ name() + "/node"
                operator: In
                values:
                  - "true"
              #! - key: #@ name() + "/api"
              #!   operator: In
              #!   values:
              #!     - "true"
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      tolerations:
      - operator: Exists
        effect: NoSchedule
      #! imagePullSecrets:
      #! - name: piraeus-regcred

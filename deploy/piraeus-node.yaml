---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: piraeus-node
  namespace: piraeus
spec:
  minReadySeconds: 0
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: piraeus
        app.kubernetes.io/component: piraeus-node
    spec:
      priorityClassName: system-node-critical
      restartPolicy: Always
      terminationGracePeriodSeconds: 0
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      # imagePullSecrets:
      # - name: piraeus-regcred
      initContainers:
      - name: register-node
        image: alexzhc/piraeus-server:v1.2.1
        imagePullPolicy: Always
        resources:
          # requests:
          #   cpu: 100m
           #   memory: 100Mi
          limits:
            cpu: 500m
            memory: 500Mi
        env:
        - name: LS_CONTROLLERS
          value: 'piraeus-controller.piraeus:3370'
        - name: TIMEOUT
          value: '3600'
        command:
        - /bin/bash
        - -xc
        - |
          # Check if controller is up  
          SECONDS=0
          until curl -sS ${LS_CONTROLLERS} --connect-timeout 2 ; do
            sleep 0.5
            if [ "${SECONDS}" -ge  "${TIMEOUT}" ]; then
                echo ERR: Unable to reach controller 
                exit 0 # Don't block node from coming up
            fi
          done

          # Obtain node ip and interface
          CONTROLLER_IP=$( getent hosts piraeus-controller.piraeus | awk '{print $1}' )
          HOST_IF=$( ip route get ${CONTROLLER_IP} | grep -o 'dev [^ ]*' | awk '{print $2}' )
          HOST_IP=$( ifconfig ${HOST_IF} | grep -o 'inet [^ ]*' | awk '{print $2}' )

          # Register node to controller by "Best-Effort"
          if linstor node list -p | tail -n+3 | grep -w "${HOSTNAME}\|${HOST_IP}"; then
              echo WARN: This node is already the cluster
              linstor node list -p 
          elif linstor node create ${HOSTNAME} ${HOST_IP} --node-type Satellite --interface-name ${HOST_IF}; then
              echo INFO: Successfully added this node to the cluster
              linstor node list -p -N ${HOSTNAME}  
          else 
              echo ERR: Failed to add this node to the cluster
              linstor node list -p 
          fi

          exit 0 # Don't block node from coming up
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime 
        - name: usr-sbin
          mountPath: /install/usr/sbin

      - name: load-drbd
        image: alexzhc/drbd-builder:9.0.21-centos
        imagePullPolicy: Always
        resources:
          # requests:
          #   cpu: '500m'
           #   memory: '500Mi'
          limits:
            cpu: 1
            memory: 1Gi
        env:
        - name: DO_LOAD_DRBD
          value: 'TRUE'
        volumeMounts:
        - name: localtime
          mountPath: /etc/localtime
        - name: usr-src-kernels
          mountPath: /usr/src/kernels 
        - name: lib-modules
          mountPath: /lib/modules    
        - name: etc
          mountPath: /install/etc
        - name: lib 
          mountPath: /install/lib
        - name: usr
          mountPath: /install/usr
        - name: var
          mountPath: /install/var 

      containers:
      - name: piraeus-satellite
        image: alexzhc/piraeus-server:v1.2.1
        imagePullPolicy: Always
        securityContext:
          privileged: true
        resources:
          # requests:
          #   cpu: '500m'
           #   memory: '500Mi'
          limits:
            cpu: 1
            memory: 1Gi
        env:
        - name: LS_CONTROLLERS
          value: piraeus-controller.piraeus:3370
        - name: DfltStorPool_Dir
          value: /var/local/piraeus/pools/DfltStorPool
        command:
        - /usr/share/linstor-server/bin/Satellite
        - --logs=/var/log/linstor-satellite/
        - --config-directory=/etc/linstor 
        readinessProbe:
          successThreshold: 3
          failureThreshold: 3
          tcpSocket:
            port: 3366
          initialDelaySeconds: 5
          periodSeconds: 1
        lifecycle:
          postStart:
            exec:
              command: 
              - /bin/bash
              - -xc
              - |       
                # load drbd modules
                grep '^drbd ' /proc/modules || modinfo drbd && modprobe -v drbd
                grep '^drbd_transport_tcp ' /proc/modules || modinfo drbd_transport_tcp && modprobe -v drbd_transport_tcp

                # wait until node process is up
                until nc -zvw2 127.0.0.1 3366 ; do
                  sleep 0.5 
                  echo ${SECONDS} >> /tmp/poststart.log
                  if [ "${SECONDS}" -ge 60 ]; then
                      echo ERR: Unable to reach satellite
                      exit 0 # Don't block node readiness
                  fi
                done

                # wait until node is online
                until linstor node list -p | tee -a /tmp/poststart.log | grep -w "${HOSTNAME}" | grep -w Online; do
                  sleep 2
                  echo ${SECONDS} >> /tmp/poststart.log
                  if [ "${SECONDS}" -ge 60 ]; then
                      echo ERR: Satellite online-check timed out >> /tmp/poststart.log
                      exit 0 # Don't block node readiness
                  fi
                done

                [ -d ${DfltStorPool_Dir} ] || mkdir -vp ${DfltStorPool_Dir}
                if linstor storage-pool list -p | tee -a /tmp/poststart.log | grep -w "${HOSTNAME}" | grep -w DfltStorPool; then 
                  exit 0 
                else 
                  linstor storage-pool create filethin ${HOSTNAME} DfltStorPool ${DfltStorPool_Dir} >> /tmp/poststart.log 2>&1 
                fi 

                exit 0 # Don't block node readiness 
        volumeMounts:        
        - name: localtime
          mountPath: /etc/localtime
        - name: log
          mountPath: /var/log/linstor-satellite
        - name: var-local-piraeus
          mountPath: /var/local/piraeus
        - name: dev
          mountPath: /dev
        - name: lib-modules
          mountPath: /lib/modules
        - name: etc-lvm
          mountPath: /etc/lvm    
        - name: run-lvm
          mountPath: /run/lvm
        - name: etc-drbd-d
          mountPath: /etc/drbd.d
        - name: var-lib-linstor-d
          mountPath: /var/lib/linstor.d
        - name: etc-linstor
          mountPath: /etc/linstor

      volumes:
      # Host mounts for operaton container
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: log
        hostPath: 
          path: /var/log/piraeus/linstor-satellite
      - name: var-local-piraeus
        hostPath:
          path: /var/local/piraeus
      - name: dev
        hostPath: 
          path: /dev
      - name: usr-sbin
        hostPath:
          path: /usr/sbin
      - name: lib-modules
        hostPath: 
          path: /lib/modules
      - name: etc-lvm
        hostPath: 
          path: /etc/lvm
      - name: run-lvm
        hostPath: 
          path: /run/lvm
      - name: etc-drbd-d
        hostPath: 
          path: /etc/drbd.d
      - name: var-lib-linstor-d
        hostPath: 
          path: /var/lib/linstor.d
      - name: etc-linstor
        hostPath: 
          path: /etc/linstor

      # Host mounts for drop installation
      - name: usr-src-kernels
        hostPath: 
          path: /usr/src/kernels
      - name: etc
        hostPath: 
          path: /etc
      - name: lib
        hostPath: 
          path: /lib
      - name: usr
        hostPath:
          path: /usr
      - name: var
        hostPath: 
          path: /var          

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: piraeus/node
                operator: In
                values:
                - "true"
              - key: node-role.kubernetes.io/master
                operator: DoesNotExist
      tolerations:
        - operator: "Exists"
          effect: "NoSchedule"